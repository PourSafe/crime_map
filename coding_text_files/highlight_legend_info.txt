onMouseOver="highlight_legend('HOMICIDE')" onMouseOut="reset_legend()"

// Will be used when rolling over type of crime
// In the legend
var layers_highlight_legend_group = new L.LayerGroup();


// What the markers will look like on mouseover in legend
var highlight_style_legend = {
    radius: 6,
    color: "#000",
    weight: 1,
    opacity: 1,
    fillOpacity: 0,
    fillColor: "#fff"
};


// Assaults and burglaries have separate functions
// Because they have multiple crime classifications
// Like 'ASSAULT' and 'ASSAULT IN PROGRESS/JUST'
function highlight_legend_assault() {	
    // Clear out group of highlighted layers
    layers_highlight_legend_group.clearLayers();
    // Run through JSON file
    for (incident in crime_data) {
        // Grab LatLng from JSON file
        marker_location = new L.LatLng(crime_data[incident].lat, crime_data[incident].long);
        // And plot locations with our data
        if (crime_data[incident].crime === 'ASSAULT' || crime_data[incident].crime === 'ASSAULT/AMBULANCE REQUESTED' | crime_data[incident].crime === 'ASSAULT IN PROGRESS/JUST') {
            layer = new L.CircleMarker(marker_location, highlight_style_legend);
            layers_highlight_legend_group.addLayer(layer);
        }
        // Add to map
        map.addLayer(layers_highlight_legend_group);
    }
};

function highlight_legend_burglary() {	
    // Clear out group of highlighted layers
    layers_highlight_legend_group.clearLayers();
    // Run through JSON file
    for (incident in crime_data) {
        // Grab LatLng from JSON file
        marker_location = new L.LatLng(crime_data[incident].lat, crime_data[incident].long);
        // And plot locations with our data
        if (crime_data[incident].crime === 'BURGLARY' || crime_data[incident].crime === 'BURGLARY IN PROGRESS/JUST') {
            layer = new L.CircleMarker(marker_location, highlight_style_legend);
            layers_highlight_legend_group.addLayer(layer);
        }
        // Add to map
        map.addLayer(layers_highlight_legend_group);
    }
};

function highlight_legend(type_of_crime) {	
    // Clear out group of highlighted layers
    layers_highlight_legend_group.clearLayers();
    // Run through JSON file
    for (incident in crime_data) {
        // Grab LatLng from JSON file
        marker_location = new L.LatLng(crime_data[incident].lat, crime_data[incident].long);
        // And plot locations with our data
        if (crime_data[incident].crime === type_of_crime) {
            layer = new L.CircleMarker(marker_location, highlight_style_legend);
            layers_highlight_legend_group.addLayer(layer);
        }
        // Add to map
        map.addLayer(layers_highlight_legend_group);
    }
};


// Remove the layer after mouseout
function reset_legend(boundaries, color) {
    map.removeLayer(layers_highlight_legend_group);
};